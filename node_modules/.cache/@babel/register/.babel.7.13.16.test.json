{
  "{\"assumptions\":{},\"sourceRoot\":\"C:\\\\focus\\\\\",\"caller\":{\"name\":\"@babel/register\"},\"cwd\":\"C:\\\\focus\",\"filename\":\"C:\\\\focus\\\\wdio.conf.js\",\"targets\":{},\"cloneInputAst\":true,\"babelrc\":false,\"configFile\":false,\"browserslistConfigFile\":false,\"passPerPreset\":false,\"envName\":\"test\",\"root\":\"C:\\\\focus\",\"rootMode\":\"root\",\"plugins\":[{\"key\":\"syntax-numeric-separator\",\"visitor\":{},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-logical-assignment-operators\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"AssignmentExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"syntax-nullish-coalescing-operator\",\"visitor\":{},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-chaining\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"syntax-json-strings\",\"visitor\":{},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"syntax-optional-catch-binding\",\"visitor\":{},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"syntax-async-generators\",\"visitor\":{},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"syntax-object-rest-spread\",\"visitor\":{},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-export-namespace-from\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"ExportNamedDeclaration\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.13.16:test": {
    "metadata": {},
    "options": {
      "assumptions": {},
      "sourceRoot": "C:\\focus\\",
      "caller": {
        "name": "@babel/register"
      },
      "cwd": "C:\\focus",
      "filename": "C:\\focus\\wdio.conf.js",
      "targets": {},
      "cloneInputAst": true,
      "babelrc": false,
      "configFile": false,
      "browserslistConfigFile": false,
      "envName": "test",
      "root": "C:\\focus",
      "rootMode": "root",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "syntax-numeric-separator",
          "visitor": {
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-logical-assignment-operators",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "AssignmentExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "syntax-nullish-coalescing-operator",
          "visitor": {
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-chaining",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "OptionalCallExpression": {
              "enter": [
                null
              ]
            },
            "OptionalMemberExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "syntax-json-strings",
          "visitor": {
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "syntax-optional-catch-binding",
          "visitor": {
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "syntax-async-generators",
          "visitor": {
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "syntax-object-rest-spread",
          "visitor": {
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-export-namespace-from",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "C:\\focus\\wdio.conf.js",
        "plugins": [
          "numericSeparator",
          "logicalAssignment",
          "nullishCoalescingOperator",
          "optionalChaining",
          "jsonStrings",
          "optionalCatchBinding",
          "asyncGenerators",
          "objectRestSpread",
          "dynamicImport",
          "exportNamespaceFrom"
        ]
      },
      "generatorOpts": {
        "filename": "C:\\focus\\wdio.conf.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "C:\\focus\\",
        "sourceFileName": "wdio.conf.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nexports.config = {\n  //\n  // ====================\n  // Runner Configuration\n  // ====================\n  //\n  // WebdriverIO allows it to run your tests in arbitrary locations (e.g. locally or\n  // on a remote machine).\n  runner: 'local',\n  //\n  // ==================\n  // Specify Test Files\n  // ==================\n  // Define which test specs should run. The pattern is relative to the directory\n  // from which `wdio` was called.\n  //\n  // The specs are defined as an array of spec files (optionally using wildcards\n  // that will be expanded). The test for each spec file will be run in a separate\n  // worker process. In order to have a group of spec files run in the same worker\n  // process simply enclose them in an array within the specs array.\n  //\n  // If you are calling `wdio` from an NPM script (see https://docs.npmjs.com/cli/run-script),\n  // then the current working directory is where your `package.json` resides, so `wdio`\n  // will be called from there.\n  //\n  specs: ['./test/**.js'],\n  // Patterns to exclude.\n  exclude: [// 'path/to/excluded/files'\n  ],\n  //\n  // ============\n  // Capabilities\n  // ============\n  // Define your capabilities here. WebdriverIO can run multiple capabilities at the same\n  // time. Depending on the number of capabilities, WebdriverIO launches several test\n  // sessions. Within your capabilities you can overwrite the spec and exclude options in\n  // order to group specific specs to a specific capability.\n  //\n  // First, you can define how many instances should be started at the same time. Let's\n  // say you have 3 different capabilities (Chrome, Firefox, and Safari) and you have\n  // set maxInstances to 1; wdio will spawn 3 processes. Therefore, if you have 10 spec\n  // files and you set maxInstances to 10, all spec files will get tested at the same time\n  // and 30 processes will get spawned. The property handles how many capabilities\n  // from the same test should run tests.\n  //\n  maxInstances: 10,\n  //\n  // If you have trouble getting all important capabilities together, check out the\n  // Sauce Labs platform configurator - a great tool to configure your capabilities:\n  // https://docs.saucelabs.com/reference/platforms-configurator\n  //\n  capabilities: [{\n    // maxInstances can get overwritten per capability. So if you have an in-house Selenium\n    // grid with only 5 firefox instances available you can make sure that not more than\n    // 5 instances get started at a time.\n    maxInstances: 5,\n    //\n    browserName: 'chrome',\n    acceptInsecureCerts: true,\n    \"goog:chromeOptions\": {\n      args: ['start-maximized', 'use-fake-device-for-media-stream', 'use-fake-ui-for-media-stream', 'disable-infobars']\n    } // If outputDir is provided WebdriverIO can capture driver session logs\n    // it is possible to configure which logTypes to include/exclude.\n    // excludeDriverLogs: ['*'], // pass '*' to exclude all driver session logs\n    // excludeDriverLogs: ['bugreport', 'server'],\n\n  }],\n  //\n  // ===================\n  // Test Configurations\n  // ===================\n  // Define all options that are relevant for the WebdriverIO instance here\n  //\n  // Level of logging verbosity: trace | debug | info | warn | error | silent\n  logLevel: 'info',\n  //\n  // Set specific log levels per logger\n  // loggers:\n  // - webdriver, webdriverio\n  // - @wdio/applitools-service, @wdio/browserstack-service, @wdio/devtools-service, @wdio/sauce-service\n  // - @wdio/mocha-framework, @wdio/jasmine-framework\n  // - @wdio/local-runner\n  // - @wdio/sumologic-reporter\n  // - @wdio/cli, @wdio/config, @wdio/utils\n  // Level of logging verbosity: trace | debug | info | warn | error | silent\n  // logLevels: {\n  //     webdriver: 'info',\n  //     '@wdio/applitools-service': 'info'\n  // },\n  //\n  // If you only want to run your tests until a specific amount of tests have failed use\n  // bail (default is 0 - don't bail, run all tests).\n  bail: 0,\n  //\n  // Set a base URL in order to shorten url command calls. If your `url` parameter starts\n  // with `/`, the base url gets prepended, not including the path portion of your baseUrl.\n  // If your `url` parameter starts without a scheme or `/` (like `some/path`), the base url\n  // gets prepended directly.\n  baseUrl: 'http://localhost',\n  //\n  // Default timeout for all waitFor* commands.\n  waitforTimeout: 10000,\n  //\n  // Default timeout in milliseconds for request\n  // if browser driver or grid doesn't send response\n  connectionRetryTimeout: 120000,\n  //\n  // Default request retries count\n  connectionRetryCount: 3,\n  //\n  // Test runner services\n  // Services take over a specific job you don't want to take care of. They enhance\n  // your test setup with almost no effort. Unlike plugins, they don't add new\n  // commands. Instead, they hook themselves up into the test process.\n  services: ['chromedriver'],\n  // Framework you want to run your specs with.\n  // The following are supported: Mocha, Jasmine, and Cucumber\n  // see also: https://webdriver.io/docs/frameworks\n  //\n  // Make sure you have the wdio adapter package for the specific framework installed\n  // before running any tests.\n  framework: 'mocha',\n  //\n  // The number of times to retry the entire specfile when it fails as a whole\n  // specFileRetries: 1,\n  //\n  // Delay in seconds between the spec file retry attempts\n  // specFileRetriesDelay: 0,\n  //\n  // Whether or not retried specfiles should be retried immediately or deferred to the end of the queue\n  // specFileRetriesDeferred: false,\n  //\n  // Test reporter for stdout.\n  // The only one supported by default is 'dot'\n  // see also: https://webdriver.io/docs/dot-reporter\n  reporters: ['spec'],\n  port: 4444,\n  //\n  // Options to be passed to Mocha.\n  // See the full list at http://mochajs.org/\n  mochaOpts: {\n    ui: 'bdd',\n    timeout: 60000,\n    require: ['@babel/register']\n  } //\n  // =====\n  // Hooks\n  // =====\n  // WebdriverIO provides several hooks you can use to interfere with the test process in order to enhance\n  // it and to build services around it. You can either apply a single function or an array of\n  // methods to it. If one of them returns with a promise, WebdriverIO will wait until that promise got\n  // resolved to continue.\n\n  /**\n   * Gets executed once before all workers get launched.\n   * @param {Object} config wdio configuration object\n   * @param {Array.<Object>} capabilities list of capabilities details\n   */\n  // onPrepare: function (config, capabilities) {\n  // },\n\n  /**\n   * Gets executed before a worker process is spawned and can be used to initialise specific service\n   * for that worker as well as modify runtime environments in an async fashion.\n   * @param  {String} cid      capability id (e.g 0-0)\n   * @param  {[type]} caps     object containing capabilities for session that will be spawn in the worker\n   * @param  {[type]} specs    specs to be run in the worker process\n   * @param  {[type]} args     object that will be merged with the main configuration once worker is initialised\n   * @param  {[type]} execArgv list of string arguments passed to the worker process\n   */\n  // onWorkerStart: function (cid, caps, specs, args, execArgv) {\n  // },\n\n  /**\n   * Gets executed just before initialising the webdriver session and test framework. It allows you\n   * to manipulate configurations depending on the capability or spec.\n   * @param {Object} config wdio configuration object\n   * @param {Array.<Object>} capabilities list of capabilities details\n   * @param {Array.<String>} specs List of spec file paths that are to be run\n   */\n  // beforeSession: function (config, capabilities, specs) {\n  // },\n\n  /**\n   * Gets executed before test execution begins. At this point you can access to all global\n   * variables like `browser`. It is the perfect place to define custom commands.\n   * @param {Array.<Object>} capabilities list of capabilities details\n   * @param {Array.<String>} specs        List of spec file paths that are to be run\n   * @param {Object}         browser      instance of created browser/device session\n   */\n  // before: function (capabilities, specs) {\n  // },\n\n  /**\n   * Runs before a WebdriverIO command gets executed.\n   * @param {String} commandName hook command name\n   * @param {Array} args arguments that command would receive\n   */\n  // beforeCommand: function (commandName, args) {\n  // },\n\n  /**\n   * Hook that gets executed before the suite starts\n   * @param {Object} suite suite details\n   */\n  // beforeSuite: function (suite) {\n  // },\n\n  /**\n   * Function to be executed before a test (in Mocha/Jasmine) starts.\n   */\n  // beforeTest: function (test, context) {\n  // },\n\n  /**\n   * Hook that gets executed _before_ a hook within the suite starts (e.g. runs before calling\n   * beforeEach in Mocha)\n   */\n  // beforeHook: function (test, context) {\n  // },\n\n  /**\n   * Hook that gets executed _after_ a hook within the suite starts (e.g. runs after calling\n   * afterEach in Mocha)\n   */\n  // afterHook: function (test, context, { error, result, duration, passed, retries }) {\n  // },\n\n  /**\n   * Function to be executed after a test (in Mocha/Jasmine).\n   */\n  // afterTest: function(test, context, { error, result, duration, passed, retries }) {\n  // },\n\n  /**\n   * Hook that gets executed after the suite has ended\n   * @param {Object} suite suite details\n   */\n  // afterSuite: function (suite) {\n  // },\n\n  /**\n   * Runs after a WebdriverIO command gets executed\n   * @param {String} commandName hook command name\n   * @param {Array} args arguments that command would receive\n   * @param {Number} result 0 - command success, 1 - command error\n   * @param {Object} error error object if any\n   */\n  // afterCommand: function (commandName, args, result, error) {\n  // },\n\n  /**\n   * Gets executed after all tests are done. You still have access to all global variables from\n   * the test.\n   * @param {Number} result 0 - test pass, 1 - test fail\n   * @param {Array.<Object>} capabilities list of capabilities details\n   * @param {Array.<String>} specs List of spec file paths that ran\n   */\n  // after: function (result, capabilities, specs) {\n  // },\n\n  /**\n   * Gets executed right after terminating the webdriver session.\n   * @param {Object} config wdio configuration object\n   * @param {Array.<Object>} capabilities list of capabilities details\n   * @param {Array.<String>} specs List of spec file paths that ran\n   */\n  // afterSession: function (config, capabilities, specs) {\n  // },\n\n  /**\n   * Gets executed after all workers got shut down and the process is about to exit. An error\n   * thrown in the onComplete hook will result in the test run failing.\n   * @param {Object} exitCode 0 - success, 1 - fail\n   * @param {Object} config wdio configuration object\n   * @param {Array.<Object>} capabilities list of capabilities details\n   * @param {<Object>} results object containing test results\n   */\n  // onComplete: function(exitCode, config, capabilities, results) {\n  // },\n\n  /**\n  * Gets executed when a refresh happens.\n  * @param {String} oldSessionId session ID of the old session\n  * @param {String} newSessionId session ID of the new session\n  */\n  //onReload: function(oldSessionId, newSessionId) {\n  //}\n\n};\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,",
    "map": {
      "version": 3,
      "sources": [
        "wdio.conf.js"
      ],
      "names": [
        "exports",
        "config",
        "runner",
        "specs",
        "exclude",
        "maxInstances",
        "capabilities",
        "browserName",
        "acceptInsecureCerts",
        "args",
        "logLevel",
        "bail",
        "baseUrl",
        "waitforTimeout",
        "connectionRetryTimeout",
        "connectionRetryCount",
        "services",
        "framework",
        "reporters",
        "port",
        "mochaOpts",
        "ui",
        "timeout",
        "require"
      ],
      "mappings": ";;AAAAA,OAAO,CAACC,MAAR,GAAiB;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACAC,EAAAA,MAAM,EAAE,OARK;AASb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACAC,EAAAA,KAAK,EAAE,CACH,cADG,CAzBM;AA4Bb;AACAC,EAAAA,OAAO,EAAE,CACL;AADK,GA7BI;AAgCb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACAC,EAAAA,YAAY,EAAE,EAhDD;AAiDb;AACA;AACA;AACA;AACA;AACAC,EAAAA,YAAY,EAAE,CAAC;AAEX;AACA;AACA;AACAD,IAAAA,YAAY,EAAE,CALH;AAMX;AACAE,IAAAA,WAAW,EAAE,QAPF;AAQXC,IAAAA,mBAAmB,EAAE,IARV;AASX,0BAAqB;AACjBC,MAAAA,IAAI,EAAC,CAAC,iBAAD,EAAoB,kCAApB,EAAwD,8BAAxD,EAAuF,kBAAvF;AADY,KATV,CAYX;AACA;AACA;AACA;;AAfW,GAAD,CAtDD;AAuEb;AACA;AACA;AACA;AACA;AACA;AACA;AACAC,EAAAA,QAAQ,EAAE,MA9EG;AA+Eb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACAC,EAAAA,IAAI,EAAE,CAhGO;AAiGb;AACA;AACA;AACA;AACA;AACAC,EAAAA,OAAO,EAAE,kBAtGI;AAuGb;AACA;AACAC,EAAAA,cAAc,EAAE,KAzGH;AA0Gb;AACA;AACA;AACAC,EAAAA,sBAAsB,EAAE,MA7GX;AA8Gb;AACA;AACAC,EAAAA,oBAAoB,EAAE,CAhHT;AAiHb;AACA;AACA;AACA;AACA;AACAC,EAAAA,QAAQ,EAAE,CAAC,cAAD,CAtHG;AAwHb;AACA;AACA;AACA;AACA;AACA;AACAC,EAAAA,SAAS,EAAE,OA9HE;AA+Hb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACAC,EAAAA,SAAS,EAAE,CAAC,MAAD,CA5IE;AA6IbC,EAAAA,IAAI,EAAC,IA7IQ;AAiJb;AACA;AACA;AACAC,EAAAA,SAAS,EAAE;AACPC,IAAAA,EAAE,EAAE,KADG;AAEPC,IAAAA,OAAO,EAAE,KAFF;AAGPC,IAAAA,OAAO,EAAC,CAAC,iBAAD;AAHD,GApJE,CAyJb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA;AACJ;AACA;AACA;AACA;AACI;AACA;;AACA;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACI;AACA;;AACA;AACJ;AACA;AACA;AACA;AACA;AACA;AACI;AACA;;AACA;AACJ;AACA;AACA;AACA;AACA;AACA;AACI;AACA;;AACA;AACJ;AACA;AACA;AACA;AACI;AACA;;AACA;AACJ;AACA;AACA;AACI;AACA;;AACA;AACJ;AACA;AACI;AACA;;AACA;AACJ;AACA;AACA;AACI;AACA;;AACA;AACJ;AACA;AACA;AACI;AACA;;AACA;AACJ;AACA;AACI;AACA;;AAGA;AACJ;AACA;AACA;AACI;AACA;;AACA;AACJ;AACA;AACA;AACA;AACA;AACA;AACI;AACA;;AACA;AACJ;AACA;AACA;AACA;AACA;AACA;AACI;AACA;;AACA;AACJ;AACA;AACA;AACA;AACA;AACI;AACA;;AACA;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACI;AACA;;AACA;AACJ;AACA;AACA;AACA;AACI;AACA;;AA1Ra,CAAjB",
      "sourceRoot": "C:\\focus\\",
      "sourcesContent": [
        "exports.config = {\n    //\n    // ====================\n    // Runner Configuration\n    // ====================\n    //\n    // WebdriverIO allows it to run your tests in arbitrary locations (e.g. locally or\n    // on a remote machine).\n    runner: 'local',\n    //\n    // ==================\n    // Specify Test Files\n    // ==================\n    // Define which test specs should run. The pattern is relative to the directory\n    // from which `wdio` was called.\n    //\n    // The specs are defined as an array of spec files (optionally using wildcards\n    // that will be expanded). The test for each spec file will be run in a separate\n    // worker process. In order to have a group of spec files run in the same worker\n    // process simply enclose them in an array within the specs array.\n    //\n    // If you are calling `wdio` from an NPM script (see https://docs.npmjs.com/cli/run-script),\n    // then the current working directory is where your `package.json` resides, so `wdio`\n    // will be called from there.\n    //\n    specs: [\n        './test/**.js'\n    ],\n    // Patterns to exclude.\n    exclude: [\n        // 'path/to/excluded/files'\n    ],\n    //\n    // ============\n    // Capabilities\n    // ============\n    // Define your capabilities here. WebdriverIO can run multiple capabilities at the same\n    // time. Depending on the number of capabilities, WebdriverIO launches several test\n    // sessions. Within your capabilities you can overwrite the spec and exclude options in\n    // order to group specific specs to a specific capability.\n    //\n    // First, you can define how many instances should be started at the same time. Let's\n    // say you have 3 different capabilities (Chrome, Firefox, and Safari) and you have\n    // set maxInstances to 1; wdio will spawn 3 processes. Therefore, if you have 10 spec\n    // files and you set maxInstances to 10, all spec files will get tested at the same time\n    // and 30 processes will get spawned. The property handles how many capabilities\n    // from the same test should run tests.\n    //\n    maxInstances: 10,\n    //\n    // If you have trouble getting all important capabilities together, check out the\n    // Sauce Labs platform configurator - a great tool to configure your capabilities:\n    // https://docs.saucelabs.com/reference/platforms-configurator\n    //\n    capabilities: [{\n    \n        // maxInstances can get overwritten per capability. So if you have an in-house Selenium\n        // grid with only 5 firefox instances available you can make sure that not more than\n        // 5 instances get started at a time.\n        maxInstances: 5,\n        //\n        browserName: 'chrome',\n        acceptInsecureCerts: true,\n        \"goog:chromeOptions\":{\n            args:['start-maximized', 'use-fake-device-for-media-stream', 'use-fake-ui-for-media-stream','disable-infobars'],\n        }\n        // If outputDir is provided WebdriverIO can capture driver session logs\n        // it is possible to configure which logTypes to include/exclude.\n        // excludeDriverLogs: ['*'], // pass '*' to exclude all driver session logs\n        // excludeDriverLogs: ['bugreport', 'server'],\n    }],\n    //\n    // ===================\n    // Test Configurations\n    // ===================\n    // Define all options that are relevant for the WebdriverIO instance here\n    //\n    // Level of logging verbosity: trace | debug | info | warn | error | silent\n    logLevel: 'info',\n    //\n    // Set specific log levels per logger\n    // loggers:\n    // - webdriver, webdriverio\n    // - @wdio/applitools-service, @wdio/browserstack-service, @wdio/devtools-service, @wdio/sauce-service\n    // - @wdio/mocha-framework, @wdio/jasmine-framework\n    // - @wdio/local-runner\n    // - @wdio/sumologic-reporter\n    // - @wdio/cli, @wdio/config, @wdio/utils\n    // Level of logging verbosity: trace | debug | info | warn | error | silent\n    // logLevels: {\n    //     webdriver: 'info',\n    //     '@wdio/applitools-service': 'info'\n    // },\n    //\n    // If you only want to run your tests until a specific amount of tests have failed use\n    // bail (default is 0 - don't bail, run all tests).\n    bail: 0,\n    //\n    // Set a base URL in order to shorten url command calls. If your `url` parameter starts\n    // with `/`, the base url gets prepended, not including the path portion of your baseUrl.\n    // If your `url` parameter starts without a scheme or `/` (like `some/path`), the base url\n    // gets prepended directly.\n    baseUrl: 'http://localhost',\n    //\n    // Default timeout for all waitFor* commands.\n    waitforTimeout: 10000,\n    //\n    // Default timeout in milliseconds for request\n    // if browser driver or grid doesn't send response\n    connectionRetryTimeout: 120000,\n    //\n    // Default request retries count\n    connectionRetryCount: 3,\n    //\n    // Test runner services\n    // Services take over a specific job you don't want to take care of. They enhance\n    // your test setup with almost no effort. Unlike plugins, they don't add new\n    // commands. Instead, they hook themselves up into the test process.\n    services: ['chromedriver'],\n    \n    // Framework you want to run your specs with.\n    // The following are supported: Mocha, Jasmine, and Cucumber\n    // see also: https://webdriver.io/docs/frameworks\n    //\n    // Make sure you have the wdio adapter package for the specific framework installed\n    // before running any tests.\n    framework: 'mocha',\n    //\n    // The number of times to retry the entire specfile when it fails as a whole\n    // specFileRetries: 1,\n    //\n    // Delay in seconds between the spec file retry attempts\n    // specFileRetriesDelay: 0,\n    //\n    // Whether or not retried specfiles should be retried immediately or deferred to the end of the queue\n    // specFileRetriesDeferred: false,\n    //\n    // Test reporter for stdout.\n    // The only one supported by default is 'dot'\n    // see also: https://webdriver.io/docs/dot-reporter\n    reporters: ['spec'],\n    port:4444,\n\n\n    \n    //\n    // Options to be passed to Mocha.\n    // See the full list at http://mochajs.org/\n    mochaOpts: {\n        ui: 'bdd',\n        timeout: 60000,\n        require:['@babel/register']\n    },\n    //\n    // =====\n    // Hooks\n    // =====\n    // WebdriverIO provides several hooks you can use to interfere with the test process in order to enhance\n    // it and to build services around it. You can either apply a single function or an array of\n    // methods to it. If one of them returns with a promise, WebdriverIO will wait until that promise got\n    // resolved to continue.\n    /**\n     * Gets executed once before all workers get launched.\n     * @param {Object} config wdio configuration object\n     * @param {Array.<Object>} capabilities list of capabilities details\n     */\n    // onPrepare: function (config, capabilities) {\n    // },\n    /**\n     * Gets executed before a worker process is spawned and can be used to initialise specific service\n     * for that worker as well as modify runtime environments in an async fashion.\n     * @param  {String} cid      capability id (e.g 0-0)\n     * @param  {[type]} caps     object containing capabilities for session that will be spawn in the worker\n     * @param  {[type]} specs    specs to be run in the worker process\n     * @param  {[type]} args     object that will be merged with the main configuration once worker is initialised\n     * @param  {[type]} execArgv list of string arguments passed to the worker process\n     */\n    // onWorkerStart: function (cid, caps, specs, args, execArgv) {\n    // },\n    /**\n     * Gets executed just before initialising the webdriver session and test framework. It allows you\n     * to manipulate configurations depending on the capability or spec.\n     * @param {Object} config wdio configuration object\n     * @param {Array.<Object>} capabilities list of capabilities details\n     * @param {Array.<String>} specs List of spec file paths that are to be run\n     */\n    // beforeSession: function (config, capabilities, specs) {\n    // },\n    /**\n     * Gets executed before test execution begins. At this point you can access to all global\n     * variables like `browser`. It is the perfect place to define custom commands.\n     * @param {Array.<Object>} capabilities list of capabilities details\n     * @param {Array.<String>} specs        List of spec file paths that are to be run\n     * @param {Object}         browser      instance of created browser/device session\n     */\n    // before: function (capabilities, specs) {\n    // },\n    /**\n     * Runs before a WebdriverIO command gets executed.\n     * @param {String} commandName hook command name\n     * @param {Array} args arguments that command would receive\n     */\n    // beforeCommand: function (commandName, args) {\n    // },\n    /**\n     * Hook that gets executed before the suite starts\n     * @param {Object} suite suite details\n     */\n    // beforeSuite: function (suite) {\n    // },\n    /**\n     * Function to be executed before a test (in Mocha/Jasmine) starts.\n     */\n    // beforeTest: function (test, context) {\n    // },\n    /**\n     * Hook that gets executed _before_ a hook within the suite starts (e.g. runs before calling\n     * beforeEach in Mocha)\n     */\n    // beforeHook: function (test, context) {\n    // },\n    /**\n     * Hook that gets executed _after_ a hook within the suite starts (e.g. runs after calling\n     * afterEach in Mocha)\n     */\n    // afterHook: function (test, context, { error, result, duration, passed, retries }) {\n    // },\n    /**\n     * Function to be executed after a test (in Mocha/Jasmine).\n     */\n    // afterTest: function(test, context, { error, result, duration, passed, retries }) {\n    // },\n\n\n    /**\n     * Hook that gets executed after the suite has ended\n     * @param {Object} suite suite details\n     */\n    // afterSuite: function (suite) {\n    // },\n    /**\n     * Runs after a WebdriverIO command gets executed\n     * @param {String} commandName hook command name\n     * @param {Array} args arguments that command would receive\n     * @param {Number} result 0 - command success, 1 - command error\n     * @param {Object} error error object if any\n     */\n    // afterCommand: function (commandName, args, result, error) {\n    // },\n    /**\n     * Gets executed after all tests are done. You still have access to all global variables from\n     * the test.\n     * @param {Number} result 0 - test pass, 1 - test fail\n     * @param {Array.<Object>} capabilities list of capabilities details\n     * @param {Array.<String>} specs List of spec file paths that ran\n     */\n    // after: function (result, capabilities, specs) {\n    // },\n    /**\n     * Gets executed right after terminating the webdriver session.\n     * @param {Object} config wdio configuration object\n     * @param {Array.<Object>} capabilities list of capabilities details\n     * @param {Array.<String>} specs List of spec file paths that ran\n     */\n    // afterSession: function (config, capabilities, specs) {\n    // },\n    /**\n     * Gets executed after all workers got shut down and the process is about to exit. An error\n     * thrown in the onComplete hook will result in the test run failing.\n     * @param {Object} exitCode 0 - success, 1 - fail\n     * @param {Object} config wdio configuration object\n     * @param {Array.<Object>} capabilities list of capabilities details\n     * @param {<Object>} results object containing test results\n     */\n    // onComplete: function(exitCode, config, capabilities, results) {\n    // },\n    /**\n    * Gets executed when a refresh happens.\n    * @param {String} oldSessionId session ID of the old session\n    * @param {String} newSessionId session ID of the new session\n    */\n    //onReload: function(oldSessionId, newSessionId) {\n    //}\n}\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1619187508123
  },
  "{\"assumptions\":{},\"sourceRoot\":\"C:\\\\focus\\\\test\\\\\",\"caller\":{\"name\":\"@babel/register\"},\"cwd\":\"C:\\\\focus\",\"filename\":\"C:\\\\focus\\\\test\\\\example.e2e.js\",\"targets\":{},\"cloneInputAst\":true,\"babelrc\":false,\"configFile\":false,\"browserslistConfigFile\":false,\"passPerPreset\":false,\"envName\":\"test\",\"root\":\"C:\\\\focus\",\"rootMode\":\"root\",\"plugins\":[{\"key\":\"syntax-numeric-separator\",\"visitor\":{},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-logical-assignment-operators\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"AssignmentExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"syntax-nullish-coalescing-operator\",\"visitor\":{},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-chaining\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"syntax-json-strings\",\"visitor\":{},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"syntax-optional-catch-binding\",\"visitor\":{},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"syntax-async-generators\",\"visitor\":{},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"syntax-object-rest-spread\",\"visitor\":{},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-export-namespace-from\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"ExportNamedDeclaration\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.13.16:test": {
    "metadata": {},
    "options": {
      "assumptions": {},
      "sourceRoot": "C:\\focus\\test\\",
      "caller": {
        "name": "@babel/register"
      },
      "cwd": "C:\\focus",
      "filename": "C:\\focus\\test\\example.e2e.js",
      "targets": {},
      "cloneInputAst": true,
      "babelrc": false,
      "configFile": false,
      "browserslistConfigFile": false,
      "envName": "test",
      "root": "C:\\focus",
      "rootMode": "root",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "syntax-numeric-separator",
          "visitor": {
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-logical-assignment-operators",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "AssignmentExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "syntax-nullish-coalescing-operator",
          "visitor": {
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-chaining",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "OptionalCallExpression": {
              "enter": [
                null
              ]
            },
            "OptionalMemberExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "syntax-json-strings",
          "visitor": {
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "syntax-optional-catch-binding",
          "visitor": {
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "syntax-async-generators",
          "visitor": {
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "syntax-object-rest-spread",
          "visitor": {
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-export-namespace-from",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "C:\\focus\\test\\example.e2e.js",
        "plugins": [
          "numericSeparator",
          "logicalAssignment",
          "nullishCoalescingOperator",
          "optionalChaining",
          "jsonStrings",
          "optionalCatchBinding",
          "asyncGenerators",
          "objectRestSpread",
          "dynamicImport",
          "exportNamespaceFrom"
        ]
      },
      "generatorOpts": {
        "filename": "C:\\focus\\test\\example.e2e.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "C:\\focus\\test\\",
        "sourceFileName": "example.e2e.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\ndescribe('My Login application', () => {\n  it('should login with valid credentials', async () => {\n    await browser.url(`https://the-internet.herokuapp.com/login`);\n    await (await $('#username')).setValue('tomsmith');\n    await (await $('#password')).setValue('SuperSecretPassword!');\n    await (await $('button[type=\"submit\"]')).click();\n    await expect($('#flash')).toBeExisting();\n    await expect($('#flash')).toHaveTextContaining('You logged into a secure area!');\n  });\n});\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImV4YW1wbGUuZTJlLmpzIl0sIm5hbWVzIjpbImRlc2NyaWJlIiwiaXQiLCJicm93c2VyIiwidXJsIiwiJCIsInNldFZhbHVlIiwiY2xpY2siLCJleHBlY3QiLCJ0b0JlRXhpc3RpbmciLCJ0b0hhdmVUZXh0Q29udGFpbmluZyJdLCJtYXBwaW5ncyI6Ijs7QUFBQUEsUUFBUSxDQUFDLHNCQUFELEVBQXlCLE1BQU07QUFDbkNDLEVBQUFBLEVBQUUsQ0FBQyxxQ0FBRCxFQUF3QyxZQUFZO0FBQ2xELFVBQU1DLE9BQU8sQ0FBQ0MsR0FBUixDQUFhLDBDQUFiLENBQU47QUFFQSxVQUFNLENBQUMsTUFBTUMsQ0FBQyxDQUFDLFdBQUQsQ0FBUixFQUF1QkMsUUFBdkIsQ0FBZ0MsVUFBaEMsQ0FBTjtBQUNBLFVBQU0sQ0FBQyxNQUFNRCxDQUFDLENBQUMsV0FBRCxDQUFSLEVBQXVCQyxRQUF2QixDQUFnQyxzQkFBaEMsQ0FBTjtBQUNBLFVBQU0sQ0FBQyxNQUFNRCxDQUFDLENBQUMsdUJBQUQsQ0FBUixFQUFtQ0UsS0FBbkMsRUFBTjtBQUVBLFVBQU1DLE1BQU0sQ0FBQ0gsQ0FBQyxDQUFDLFFBQUQsQ0FBRixDQUFOLENBQW9CSSxZQUFwQixFQUFOO0FBQ0EsVUFBTUQsTUFBTSxDQUFDSCxDQUFDLENBQUMsUUFBRCxDQUFGLENBQU4sQ0FBb0JLLG9CQUFwQixDQUNGLGdDQURFLENBQU47QUFFSCxHQVZDLENBQUY7QUFXSCxDQVpPLENBQVIiLCJzb3VyY2VSb290IjoiQzpcXGZvY3VzXFx0ZXN0XFwiLCJzb3VyY2VzQ29udGVudCI6WyJkZXNjcmliZSgnTXkgTG9naW4gYXBwbGljYXRpb24nLCAoKSA9PiB7XG4gICAgaXQoJ3Nob3VsZCBsb2dpbiB3aXRoIHZhbGlkIGNyZWRlbnRpYWxzJywgYXN5bmMgKCkgPT4ge1xuICAgICAgICBhd2FpdCBicm93c2VyLnVybChgaHR0cHM6Ly90aGUtaW50ZXJuZXQuaGVyb2t1YXBwLmNvbS9sb2dpbmApO1xuXG4gICAgICAgIGF3YWl0IChhd2FpdCAkKCcjdXNlcm5hbWUnKSkuc2V0VmFsdWUoJ3RvbXNtaXRoJyk7XG4gICAgICAgIGF3YWl0IChhd2FpdCAkKCcjcGFzc3dvcmQnKSkuc2V0VmFsdWUoJ1N1cGVyU2VjcmV0UGFzc3dvcmQhJyk7XG4gICAgICAgIGF3YWl0IChhd2FpdCAkKCdidXR0b25bdHlwZT1cInN1Ym1pdFwiXScpKS5jbGljaygpO1xuXG4gICAgICAgIGF3YWl0IGV4cGVjdCgkKCcjZmxhc2gnKSkudG9CZUV4aXN0aW5nKCk7XG4gICAgICAgIGF3YWl0IGV4cGVjdCgkKCcjZmxhc2gnKSkudG9IYXZlVGV4dENvbnRhaW5pbmcoXG4gICAgICAgICAgICAnWW91IGxvZ2dlZCBpbnRvIGEgc2VjdXJlIGFyZWEhJyk7XG4gICAgfSk7XG59KTtcblxuIl19",
    "map": {
      "version": 3,
      "sources": [
        "example.e2e.js"
      ],
      "names": [
        "describe",
        "it",
        "browser",
        "url",
        "$",
        "setValue",
        "click",
        "expect",
        "toBeExisting",
        "toHaveTextContaining"
      ],
      "mappings": ";;AAAAA,QAAQ,CAAC,sBAAD,EAAyB,MAAM;AACnCC,EAAAA,EAAE,CAAC,qCAAD,EAAwC,YAAY;AAClD,UAAMC,OAAO,CAACC,GAAR,CAAa,0CAAb,CAAN;AAEA,UAAM,CAAC,MAAMC,CAAC,CAAC,WAAD,CAAR,EAAuBC,QAAvB,CAAgC,UAAhC,CAAN;AACA,UAAM,CAAC,MAAMD,CAAC,CAAC,WAAD,CAAR,EAAuBC,QAAvB,CAAgC,sBAAhC,CAAN;AACA,UAAM,CAAC,MAAMD,CAAC,CAAC,uBAAD,CAAR,EAAmCE,KAAnC,EAAN;AAEA,UAAMC,MAAM,CAACH,CAAC,CAAC,QAAD,CAAF,CAAN,CAAoBI,YAApB,EAAN;AACA,UAAMD,MAAM,CAACH,CAAC,CAAC,QAAD,CAAF,CAAN,CAAoBK,oBAApB,CACF,gCADE,CAAN;AAEH,GAVC,CAAF;AAWH,CAZO,CAAR",
      "sourceRoot": "C:\\focus\\test\\",
      "sourcesContent": [
        "describe('My Login application', () => {\n    it('should login with valid credentials', async () => {\n        await browser.url(`https://the-internet.herokuapp.com/login`);\n\n        await (await $('#username')).setValue('tomsmith');\n        await (await $('#password')).setValue('SuperSecretPassword!');\n        await (await $('button[type=\"submit\"]')).click();\n\n        await expect($('#flash')).toBeExisting();\n        await expect($('#flash')).toHaveTextContaining(\n            'You logged into a secure area!');\n    });\n});\n\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1619170443470
  },
  "{\"assumptions\":{},\"sourceRoot\":\"C:\\\\focus\\\\test\\\\\",\"caller\":{\"name\":\"@babel/register\"},\"cwd\":\"C:\\\\focus\",\"filename\":\"C:\\\\focus\\\\test\\\\JFPPfocus.js\",\"targets\":{},\"cloneInputAst\":true,\"babelrc\":false,\"configFile\":false,\"browserslistConfigFile\":false,\"passPerPreset\":false,\"envName\":\"test\",\"root\":\"C:\\\\focus\",\"rootMode\":\"root\",\"plugins\":[{\"key\":\"syntax-numeric-separator\",\"visitor\":{},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-logical-assignment-operators\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"AssignmentExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"syntax-nullish-coalescing-operator\",\"visitor\":{},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-chaining\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"syntax-json-strings\",\"visitor\":{},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"syntax-optional-catch-binding\",\"visitor\":{},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"syntax-async-generators\",\"visitor\":{},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"syntax-object-rest-spread\",\"visitor\":{},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-export-namespace-from\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"ExportNamedDeclaration\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.13.16:test": {
    "metadata": {},
    "options": {
      "assumptions": {},
      "sourceRoot": "C:\\focus\\test\\",
      "caller": {
        "name": "@babel/register"
      },
      "cwd": "C:\\focus",
      "filename": "C:\\focus\\test\\JFPPfocus.js",
      "targets": {},
      "cloneInputAst": true,
      "babelrc": false,
      "configFile": false,
      "browserslistConfigFile": false,
      "envName": "test",
      "root": "C:\\focus",
      "rootMode": "root",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "syntax-numeric-separator",
          "visitor": {
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-logical-assignment-operators",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "AssignmentExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "syntax-nullish-coalescing-operator",
          "visitor": {
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-chaining",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "OptionalCallExpression": {
              "enter": [
                null
              ]
            },
            "OptionalMemberExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "syntax-json-strings",
          "visitor": {
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "syntax-optional-catch-binding",
          "visitor": {
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "syntax-async-generators",
          "visitor": {
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "syntax-object-rest-spread",
          "visitor": {
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-export-namespace-from",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "C:\\focus\\test\\JFPPfocus.js",
        "plugins": [
          "numericSeparator",
          "logicalAssignment",
          "nullishCoalescingOperator",
          "optionalChaining",
          "jsonStrings",
          "optionalCatchBinding",
          "asyncGenerators",
          "objectRestSpread",
          "dynamicImport",
          "exportNamespaceFrom"
        ]
      },
      "generatorOpts": {
        "filename": "C:\\focus\\test\\JFPPfocus.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "C:\\focus\\test\\",
        "sourceFileName": "JFPPfocus.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\ndescribe('Focus page script automated', () => {\n  it('Go to Google.com', () => {\n    browser.url('https://www.google.com/');\n    browser.pause(3000);\n    expect(browser).toHaveUrl(\"https://www.google.com/\"); //verifying the page is opened the correct url\n  });\n  it('Search Focus Services page in google', () => {\n    const searchGoogle = $('input[name=\"q\"]');\n    searchGoogle.waitForExist(5000);\n    searchGoogle.setValue('Focus Services');\n    const btnSearch = $('input[name=\"btnK\"]');\n    btnSearch.click();\n    browser.pause(3000);\n  });\n  it('Verify if https://www.focusservices.com URL exists in the search:¨Click to focus link', () => {\n    const focusLink = $('a[href=\"https://www.focusservices.com/\"]'); // focus link selector\n\n    focusLink.waitForExist(5000); //verifying if the focus link exist into the page\n\n    focusLink.waitForEnabled(5000); //wait for display into the page\n\n    focusLink.click(); //click on the focus link\n\n    browser.pause(3000);\n  });\n});\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIkpGUFBmb2N1cy5qcyJdLCJuYW1lcyI6WyJkZXNjcmliZSIsIml0IiwiYnJvd3NlciIsInVybCIsInBhdXNlIiwiZXhwZWN0IiwidG9IYXZlVXJsIiwic2VhcmNoR29vZ2xlIiwiJCIsIndhaXRGb3JFeGlzdCIsInNldFZhbHVlIiwiYnRuU2VhcmNoIiwiY2xpY2siLCJmb2N1c0xpbmsiLCJ3YWl0Rm9yRW5hYmxlZCJdLCJtYXBwaW5ncyI6Ijs7QUFBQUEsUUFBUSxDQUFDLDZCQUFELEVBQWdDLE1BQU07QUFDMUNDLEVBQUFBLEVBQUUsQ0FBQyxrQkFBRCxFQUFzQixNQUFNO0FBQzFCQyxJQUFBQSxPQUFPLENBQUNDLEdBQVIsQ0FBWSx5QkFBWjtBQUNBRCxJQUFBQSxPQUFPLENBQUNFLEtBQVIsQ0FBYyxJQUFkO0FBQ0FDLElBQUFBLE1BQU0sQ0FBQ0gsT0FBRCxDQUFOLENBQWdCSSxTQUFoQixDQUEwQix5QkFBMUIsRUFIMEIsQ0FHMkI7QUFDeEQsR0FKQyxDQUFGO0FBTUFMLEVBQUFBLEVBQUUsQ0FBQyxzQ0FBRCxFQUF5QyxNQUFNO0FBQzlDLFVBQU1NLFlBQVksR0FBR0MsQ0FBQyxDQUFDLGlCQUFELENBQXRCO0FBQ0FELElBQUFBLFlBQVksQ0FBQ0UsWUFBYixDQUEwQixJQUExQjtBQUNBRixJQUFBQSxZQUFZLENBQUNHLFFBQWIsQ0FBc0IsZ0JBQXRCO0FBQ0EsVUFBTUMsU0FBUyxHQUFJSCxDQUFDLENBQUMsb0JBQUQsQ0FBcEI7QUFDQUcsSUFBQUEsU0FBUyxDQUFDQyxLQUFWO0FBQ0FWLElBQUFBLE9BQU8sQ0FBQ0UsS0FBUixDQUFjLElBQWQ7QUFDRixHQVBDLENBQUY7QUFTQUgsRUFBQUEsRUFBRSxDQUFDLHVGQUFELEVBQTBGLE1BQU07QUFDOUYsVUFBTVksU0FBUyxHQUFHTCxDQUFDLENBQUMsMENBQUQsQ0FBbkIsQ0FEOEYsQ0FDOUI7O0FBQ2hFSyxJQUFBQSxTQUFTLENBQUNKLFlBQVYsQ0FBdUIsSUFBdkIsRUFGOEYsQ0FFaEU7O0FBQzlCSSxJQUFBQSxTQUFTLENBQUNDLGNBQVYsQ0FBeUIsSUFBekIsRUFIOEYsQ0FHOUQ7O0FBQ2hDRCxJQUFBQSxTQUFTLENBQUNELEtBQVYsR0FKOEYsQ0FJM0U7O0FBQ25CVixJQUFBQSxPQUFPLENBQUNFLEtBQVIsQ0FBYyxJQUFkO0FBQ0YsR0FOQSxDQUFGO0FBT0gsQ0F2Qk8sQ0FBUiIsInNvdXJjZVJvb3QiOiJDOlxcZm9jdXNcXHRlc3RcXCIsInNvdXJjZXNDb250ZW50IjpbImRlc2NyaWJlKCdGb2N1cyBwYWdlIHNjcmlwdCBhdXRvbWF0ZWQnLCAoKSA9PiB7XHJcbiAgICBpdCgnR28gdG8gR29vZ2xlLmNvbScsICAoKSA9PiB7XHJcbiAgICAgICAgYnJvd3Nlci51cmwoJ2h0dHBzOi8vd3d3Lmdvb2dsZS5jb20vJyk7XHJcbiAgICAgICAgYnJvd3Nlci5wYXVzZSgzMDAwKTtcclxuICAgICAgICBleHBlY3QoYnJvd3NlcikudG9IYXZlVXJsKFwiaHR0cHM6Ly93d3cuZ29vZ2xlLmNvbS9cIikgLy92ZXJpZnlpbmcgdGhlIHBhZ2UgaXMgb3BlbmVkIHRoZSBjb3JyZWN0IHVybFxyXG4gICAgfSk7XHJcblxyXG4gICAgaXQoJ1NlYXJjaCBGb2N1cyBTZXJ2aWNlcyBwYWdlIGluIGdvb2dsZScsICgpID0+IHtcclxuICAgICAgIGNvbnN0IHNlYXJjaEdvb2dsZSA9ICQoJ2lucHV0W25hbWU9XCJxXCJdJyk7XHJcbiAgICAgICBzZWFyY2hHb29nbGUud2FpdEZvckV4aXN0KDUwMDApO1xyXG4gICAgICAgc2VhcmNoR29vZ2xlLnNldFZhbHVlKCdGb2N1cyBTZXJ2aWNlcycpO1xyXG4gICAgICAgY29uc3QgYnRuU2VhcmNoID0gICQoJ2lucHV0W25hbWU9XCJidG5LXCJdJyk7XHJcbiAgICAgICBidG5TZWFyY2guY2xpY2soKTtcclxuICAgICAgIGJyb3dzZXIucGF1c2UoMzAwMCk7XHJcbiAgICB9KTtcclxuXHJcbiAgICBpdCgnVmVyaWZ5IGlmIGh0dHBzOi8vd3d3LmZvY3Vzc2VydmljZXMuY29tIFVSTCBleGlzdHMgaW4gdGhlIHNlYXJjaDrCqENsaWNrIHRvIGZvY3VzIGxpbmsnLCAoKSA9PiB7XHJcbiAgICAgICAgY29uc3QgZm9jdXNMaW5rID0gJCgnYVtocmVmPVwiaHR0cHM6Ly93d3cuZm9jdXNzZXJ2aWNlcy5jb20vXCJdJyk7Ly8gZm9jdXMgbGluayBzZWxlY3RvclxyXG4gICAgICAgIGZvY3VzTGluay53YWl0Rm9yRXhpc3QoNTAwMCk7IC8vdmVyaWZ5aW5nIGlmIHRoZSBmb2N1cyBsaW5rIGV4aXN0IGludG8gdGhlIHBhZ2VcclxuICAgICAgICBmb2N1c0xpbmsud2FpdEZvckVuYWJsZWQoNTAwMCk7IC8vd2FpdCBmb3IgZGlzcGxheSBpbnRvIHRoZSBwYWdlXHJcbiAgICAgICAgZm9jdXNMaW5rLmNsaWNrKCk7IC8vY2xpY2sgb24gdGhlIGZvY3VzIGxpbmtcclxuICAgICAgICBicm93c2VyLnBhdXNlKDMwMDApO1xyXG4gICAgIH0pO1xyXG59KTsiXX0=",
    "map": {
      "version": 3,
      "sources": [
        "JFPPfocus.js"
      ],
      "names": [
        "describe",
        "it",
        "browser",
        "url",
        "pause",
        "expect",
        "toHaveUrl",
        "searchGoogle",
        "$",
        "waitForExist",
        "setValue",
        "btnSearch",
        "click",
        "focusLink",
        "waitForEnabled"
      ],
      "mappings": ";;AAAAA,QAAQ,CAAC,6BAAD,EAAgC,MAAM;AAC1CC,EAAAA,EAAE,CAAC,kBAAD,EAAsB,MAAM;AAC1BC,IAAAA,OAAO,CAACC,GAAR,CAAY,yBAAZ;AACAD,IAAAA,OAAO,CAACE,KAAR,CAAc,IAAd;AACAC,IAAAA,MAAM,CAACH,OAAD,CAAN,CAAgBI,SAAhB,CAA0B,yBAA1B,EAH0B,CAG2B;AACxD,GAJC,CAAF;AAMAL,EAAAA,EAAE,CAAC,sCAAD,EAAyC,MAAM;AAC9C,UAAMM,YAAY,GAAGC,CAAC,CAAC,iBAAD,CAAtB;AACAD,IAAAA,YAAY,CAACE,YAAb,CAA0B,IAA1B;AACAF,IAAAA,YAAY,CAACG,QAAb,CAAsB,gBAAtB;AACA,UAAMC,SAAS,GAAIH,CAAC,CAAC,oBAAD,CAApB;AACAG,IAAAA,SAAS,CAACC,KAAV;AACAV,IAAAA,OAAO,CAACE,KAAR,CAAc,IAAd;AACF,GAPC,CAAF;AASAH,EAAAA,EAAE,CAAC,uFAAD,EAA0F,MAAM;AAC9F,UAAMY,SAAS,GAAGL,CAAC,CAAC,0CAAD,CAAnB,CAD8F,CAC9B;;AAChEK,IAAAA,SAAS,CAACJ,YAAV,CAAuB,IAAvB,EAF8F,CAEhE;;AAC9BI,IAAAA,SAAS,CAACC,cAAV,CAAyB,IAAzB,EAH8F,CAG9D;;AAChCD,IAAAA,SAAS,CAACD,KAAV,GAJ8F,CAI3E;;AACnBV,IAAAA,OAAO,CAACE,KAAR,CAAc,IAAd;AACF,GANA,CAAF;AAOH,CAvBO,CAAR",
      "sourceRoot": "C:\\focus\\test\\",
      "sourcesContent": [
        "describe('Focus page script automated', () => {\r\n    it('Go to Google.com',  () => {\r\n        browser.url('https://www.google.com/');\r\n        browser.pause(3000);\r\n        expect(browser).toHaveUrl(\"https://www.google.com/\") //verifying the page is opened the correct url\r\n    });\r\n\r\n    it('Search Focus Services page in google', () => {\r\n       const searchGoogle = $('input[name=\"q\"]');\r\n       searchGoogle.waitForExist(5000);\r\n       searchGoogle.setValue('Focus Services');\r\n       const btnSearch =  $('input[name=\"btnK\"]');\r\n       btnSearch.click();\r\n       browser.pause(3000);\r\n    });\r\n\r\n    it('Verify if https://www.focusservices.com URL exists in the search:¨Click to focus link', () => {\r\n        const focusLink = $('a[href=\"https://www.focusservices.com/\"]');// focus link selector\r\n        focusLink.waitForExist(5000); //verifying if the focus link exist into the page\r\n        focusLink.waitForEnabled(5000); //wait for display into the page\r\n        focusLink.click(); //click on the focus link\r\n        browser.pause(3000);\r\n     });\r\n});"
      ]
    },
    "sourceType": "script",
    "mtime": 1619187192462
  }
}